const { Telegraf } = require('telegraf')
const axios = require('axios')
const config = require('./config.json')
const bot = new Telegraf(config.token)
const chatId = config.BOT_chat

// –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
let userData = {}

bot.command('menu', ctx => {
	if (ctx.message.chat.id.toString() === chatId) {
		ctx.reply('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!', {
			reply_markup: {
				inline_keyboard: [
					[
						{ text: 'üÜï –ù–æ–≤—ã–π', callback_data: 'new' },
						{ text: 'üìù –ó–∞–ø–∏—Å–∞—Ç—å', callback_data: 'record' },
					],
					[
						{ text: '‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', callback_data: 'info' },
						{ text: 'üîç –ü–æ–∏—Å–∫', callback_data: 'search' },
					],
					[
						{ text: '‚ùì –°–ø—Ä–∞–≤–∫–∞', callback_data: 'help' },
						{ text: '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data: 'settings' },
					],
				],
			},
		})
	} else {
		ctx.reply('–≠—Ç–æ—Ç –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º —á–∞—Ç–µ.')
	}
})

bot.action('new', ctx => {
	ctx.answerCbQuery()
	if (ctx.callbackQuery.message.chat.id.toString() === chatId) {
		userData[ctx.from.id] = { name: '', group: '' } // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
		ctx.reply('–í–≤–µ–¥–∏—Ç–µ –∏–º—è:')
		bot.on('text', ctx => {
			if (!userData[ctx.from.id].name) {
				userData[ctx.from.id].name = ctx.message.text
				ctx.reply('–í–≤–µ–¥–∏—Ç–µ –≥—Ä—É–ø–ø—É:')
			} else if (!userData[ctx.from.id].group) {
				userData[ctx.from.id].group = ctx.message.text

				const requestBody = {
					name: userData[ctx.from.id].name,
					group: userData[ctx.from.id].group,
				}

				// URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
				const addClientURL = `${config.serverURL}/registration`

				// POST –∑–∞–ø—Ä–æ—Å
				axios
					.post(addClientURL, requestBody)
					.then(response => {
						ctx.reply(`–ö–æ–¥: ${response.data.message}`)
					})
					.catch(error => {
						console.log(error)
						ctx.reply('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö')
					})

				delete userData[ctx.from.id] // –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
			}
		})
	} else {
		ctx.reply('–≠—Ç–æ—Ç –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º —á–∞—Ç–µ.')
	}
})

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –ø–æ–º–æ—â–∏
bot.action('info', ctx => {
	ctx.answerCbQuery()
	ctx.reply('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ...')
})

bot.action('help', ctx => {
	ctx.answerCbQuery()
	ctx.reply('–°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è...')
})

bot.launch()
